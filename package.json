{
  "name": "create-react-tsx-component",
  "displayName": "Create React JS and React Native Component",
  "description": "Extension that creates React JS and React Native Component using Typescript or Javascript with Styled Components, SASS, LESS or CSS format.",
  "version": "1.6.0",
  "publisher": "ricardo-emerson",
  "repository": "https://github.com/ricardoemerson/create-react-tsx-component",
  "icon": "images/logo.png",
  "categories": [
    "Programming Languages",
    "Snippets",
    "Other"
  ],
  "keywords": [
    "create",
    "react",
    "react-native",
    "component",
    "typescript",
    "javascript",
    "next",
    "tsx",
    "jsx",
    "js",
    "styled",
    "components",
    "sass",
    "less",
    "css"
  ],
  "engines": {
    "vscode": "^1.17.0"
  },
  "activationEvents": [
    "onCommand:extension.create-react-named-component",
    "onCommand:extension.create-react-component",
    "onCommand:extension.create-react-styled-component",
    "onCommand:extension.create-react-native-named-component",
    "onCommand:extension.create-react-native-component",
    "onCommand:extension.create-react-native-styled-component"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "extension.create-react-component",
        "title": "ðŸ”¶ Create React JS Component"
      },
      {
        "command": "extension.create-react-styled-component",
        "title": "ðŸ”¶ Create React JS Component with Styles"
      },
      {
        "command": "extension.create-react-named-component",
        "title": "ðŸ”¶ Create React JS Named Component"
      },
      {
        "command": "extension.create-react-native-component",
        "title": "ðŸ”· Create React Native Component"
      },
      {
        "command": "extension.create-react-native-styled-component",
        "title": "ðŸ”· Create React Native Component with Styles"
      },
      {
        "command": "extension.create-react-native-named-component",
        "title": "ðŸ”· Create React Native Named Component"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "extension.create-react-component",
          "group": "1_modification",
          "when": "explorerResourceIsFolder"
        },
        {
          "command": "extension.create-react-styled-component",
          "group": "1_modification",
          "when": "explorerResourceIsFolder"
        },
        {
          "command": "extension.create-react-named-component",
          "group": "1_modification",
          "when": "explorerResourceIsFolder"
        },
        {
          "command": "extension.create-react-native-component",
          "group": "1_modification",
          "when": "explorerResourceIsFolder"
        },
        {
          "command": "extension.create-react-native-styled-component",
          "group": "1_modification",
          "when": "explorerResourceIsFolder"
        },
        {
          "command": "extension.create-react-native-named-component",
          "group": "1_modification",
          "when": "explorerResourceIsFolder"
        }
      ]
    },
    "configuration": {
      "title": "Create React JS and React Native Component",
      "properties": {
        "createReactTSXComponent.fileExtension": {
          "type": "string",
          "enum": [
            "tsx",
            "jsx",
            "js"
          ],
          "default": "tsx",
          "markdownDescription": "Default file extension for React JS and React Native Components."
        },
        "createReactTSXComponent.stylesFormat": {
          "type": "string",
          "enum": [
            "Styled Components",
            "SCSS",
            "LESS",
            "CSS"
          ],
          "default": "Styled Components",
          "markdownDescription": "Default style file format for React JS and React Native (only Styled Components) Components."
        },
        "createReactTSXComponent.useArrowFunctionComponent": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Defines if component will be created using an `Arrow Function` or a `Regular Function`."
        },
        "createReactTSXComponent.useReactFC": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Defines if component will be typed using `React.FC`. **Important:** Only applicable if option `Use Arrow Function Component` and `Use React Import` is enabled."
        },
        "createReactTSXComponent.useReactImport": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Defines if the import of React (`import React from 'react';`) will be used at the beginning of the component. This option should only be used if you are using **React 17+**, that comes with support for the new JSX transform, where we donâ€™t need to import React to our components anymore to use JSX."
        },
        "createReactTSXComponent.useCSSModule": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Defines if CSS file name will be sufixed with `.module.css` or `.module.scss`. **Important:** Only applicable if option `Styles Format` is `CSS` or `SCSS`."
        },
        "createReactTSXComponent.useIndex": {
          "type": "boolean",
          "default": "true",
          "markdownDescription": "Defines if should use index as the created script file name. Otherwise use the supplyed component name"
        },
        "createReactTSXComponent.useNamedStyleFile": {
          "type": "boolean",
          "default": "false",
          "markdownDescription": "Defines if should use supplyed component name as the created style file name. Otherwise use style as "
        },
        "createReactTSXComponent.useInterface": {
          "type": "boolean",
          "default": "false",
          "markdownDescription": "Defines if should use define an typescript interface for the component props"
        },
        "createReactTSXComponent.defaultFolderPath": {
          "type": "string",
          "default": "",
          "markdownDescription": "Defines a default folder for inserting the desired component"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "yarn run compile && node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/node": "^12.6.8",
    "@typescript-eslint/eslint-plugin": "^4.10.0",
    "@typescript-eslint/parser": "^4.10.0",
    "eslint": "^7.15.0",
    "eslint-config-standard": "^16.0.2",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^4.2.1",
    "tslint": "^5.12.1",
    "typescript": "^3.3.1",
    "vscode": "^1.1.28"
  },
  "dependencies": {
    "fs": "^0.0.1-security"
  }
}
